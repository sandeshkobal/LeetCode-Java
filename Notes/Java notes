int[] original = nums.clone(); // nums is int[] it gice the copy 
nums.length // gives array length 

Random rand = new Random();
rand.nextInt(aux.size());

String a = new String("");
a.length()

List<Integer> a = new ArrayList();
a.add(),a.remove(index); a.size();

// Map iterator
Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator();
while (entries.hasNext()) {
    Map.Entry<Integer, Integer> entry = entries.next();
.....
}


The Integer, String, Float, Double, Byte, Long, Short, Boolean, and Character classes are all examples of an immutable class.
By definition, you may not alter the value of an immutable object after its construction.
Of course, if you need to alter your Integer, String... instances you are out of luck. 
