https://leetcode.com/problems/satisfiability-of-equality-equations/
Given an array equations of strings that represent relationships between variables, each string equations[i] has length 4 and takes one of two different forms: "a==b" or "a!=b".  Here, a and b are lowercase letters (not necessarily different) that represent one-letter variable names.
Return true if and only if it is possible to assign integers to variable names so as to satisfy all the given equations.
Example 1:
Input: ["a==b","b!=a"]
Output: false
Explanation: If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not the second.  There is no way to assign the variables to satisfy both equations.
Example 2:
Input: ["b==a","a==b"]
Output: true
Explanation: We could assign a = 1 and b = 1 to satisfy both equations.
Example 3:
Input: ["a==b","b==c","a==c"]
Output: true
Example 4:
Input: ["a==b","b!=c","c==a"]
Output: false
Example 5:
Input: ["c==c","b==d","x!=z"]
Output: true

    // Build a Map of equals equations  
            // eg a==b, b==c, p==y 
                //  a --> <a,b,c,z>  
                //  b points to set in a   
                //  c points to set in a
                //  p --> <p,y>
                //  y points to set in p
    // The map builds union of all characters that are same 
    // Then != characters should not be in same set 
    // also != characters should not be same

class Solution {

    public boolean equationsPossible(String[] equations) {        
        Map<Character,Set<Character>> equalsEq = new HashMap<Character,Set<Character>> ();
        for(String str : equations){
            if(str.charAt(1)== '='){
                Set<Character> set1 = equalsEq.getOrDefault(str.charAt(0), new HashSet<Character>());
                set1.add(str.charAt(0));
                set1.add(str.charAt(3));
                equalsEq.put(str.charAt(0),set1);
                Set<Character> set2 = equalsEq.get(str.charAt(3));
                if( set2 != null && set1 != set2 ){
                    for(Character c : set2){
                        set1.add(c);
                        equalsEq.put(c,set1);
                    }
                } else{
                    equalsEq.put(str.charAt(3),set1);
                }
            }
        }
        for(String str : equations){
            if(str.charAt(1) == '!'){
                if(str.charAt(0) == str.charAt(3)) 
                    return false;
                if(equalsEq.containsKey(str.charAt(0)) && equalsEq.get(str.charAt(0)).contains(str.charAt(3))) .  // containsKey for HashMap
                    return false;
            }
        }
        return true;
    }
}
