WebSocket is a computer communications protocol, providing full-duplex communication channels over a single TCP connection. 
WebSocket is a different protocol from HTTP. Both protocols are located at layer 7 in the OSI model and depend on TCP at layer 4. 
WebSocket "is designed to work over HTTP ports 80 and 443 as well as to support HTTP proxies and intermediaries" 
thus making it compatible with the HTTP protocol. To achieve compatibility, the WebSocket handshake uses the HTTP Upgrade
header[1] to change from the HTTP protocol to the WebSocket protocol.

Client request (just like in HTTP, each line ends with \r\n and there must be an extra blank line at the end):
  GET /chat HTTP/1.1
  Host: server.example.com
  Upgrade: websocket
  Connection: Upgrade
  Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw==
  Sec-WebSocket-Protocol: chat, superchat
  Sec-WebSocket-Version: 13
  Origin: http://example.com

Server response:
  HTTP/1.1 101 Switching Protocols
  Upgrade: websocket
  Connection: Upgrade
  Sec-WebSocket-Accept: HSmrc0sMlYUkAGmm5OPpG2HaGWk=
  Sec-WebSocket-Protocol: chat
  
The handshake starts with an HTTP request/response, allowing servers to handle HTTP connections as well as 
WebSocket connections on the same port. Once the connection is established,
communication switches to a bidirectional binary protocol which does not conform to the HTTP protocol.

 The communications are done over TCP port number 80 (or 443 in the case of TLS-encrypted connections), 
 which is of benefit for those environments which block non-web Internet connections using a firewall. 

How does WebSockets apps keep sending data to clients if client has changed IP?
when your IP address changes, the webSocket connection gets broken and the client 
code in the chat page realizes that and re-establishes the connection from your new IP.
My guess is that the client detects the websocket has died, and recreates it. 
This goes through the whole creation process again, so it doesn't matter if it died because the IP changed or something
else happened, like temporary loss of connection
When the server detects a websocket has died, it simply drops it. The client does all the work
The server just knows it has a number of websockets belonging to a specific user, and will send on all of them
